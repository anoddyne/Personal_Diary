@page
@model Personal_Diary.Pages.ActivityModel
@{
	ViewData["Title"] = "Активность";
}

<h1>Активность</h1>

<canvas id="chart"></canvas>

@section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                var ctx = document.getElementById('chart').getContext('2d');
                var data = {
                    labels: [@Html.Raw(string.Join(",", Model.WeeklyActivityData.Select(w => $"'{w.WeekStart.ToString("dd.MM.yyyy")}-{w.WeekStart.AddDays(6).ToString("dd.MM.yyyy")}'").ToList()))],
                    datasets: [
        @foreach (var type in Model.WeeklyActivityData.SelectMany(w => w.ActivityByType).Select(a => a.TypeName).Distinct())
        {
            <text>
                                {
                                    label: '@type',
                                    data: [@string.Join(",", Model.WeeklyActivityData.Select(w => w.ActivityByType.FirstOrDefault(a => a.TypeName == type)?.Hours ?? 0))],
                                    backgroundColor: '@Model.WeeklyActivityData.SelectMany(w => w.ActivityByType).First(a => a.TypeName == type).Color'
                                },
            </text>
        }
                    ]
                };

                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: data,
                    options: {
                        responsive: true,
                        scales: {
                            x: {
                                stacked: true,
                            },
                            y: {
                                stacked: true,
                                title: {
                                    display: true,
                                    text: 'Количество часов'
                                }
                            }
                        },
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        return context.dataset.label + ': ' + context.parsed.y.toFixed(2) + ' часов';
                                    }
                                }
                            }
                        }
                    }
                });
            });
        </script>
}