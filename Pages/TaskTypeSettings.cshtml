@page
@model Personal_Diary.Pages.TaskTypeSettingsModel
@{
	ViewData["Title"] = "Настройка типов задач";
}


<div class="container mt-4">
	<h2>Настройка типов задач</h2>
	<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#taskTypeModal">Добавить тип задачи</button>
	<table class="table mt-4">
		<thead>
			<tr>
				<th>Название</th>
				<th>Цвет</th>
				<th>Действия</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var type in Model.TaskTypes)
			{
						<tr>
							<td>@type.Name</td>
							<td><div style="width: 20px; height: 20px; background-color: @type.Color;"></div></td>
							<td>
								<button class="btn btn-warning" onclick="editTaskType(@type.Id)">Редактировать</button>
								<button class="btn btn-danger" onclick="deleteTaskType(@type.Id)">Удалить</button>
							</td>
						</tr>
			}
		</tbody>
	</table>
</div>

<!-- Модальное окно для добавления/редактирования типа задачи -->
<div class="modal fade" id="taskTypeModal" tabindex="-1" role="dialog" aria-labelledby="taskTypeModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="taskTypeModalLabel">Тип задачи</h5>
			</div>
			<div class="modal-body">
				<form id="taskTypeForm" asp-antiforgery="true">
					<input type="hidden" id="taskTypeId" />
					<div class="form-group">
						<label for="taskTypeName">Название</label>
						<input type="text" class="form-control" id="taskTypeName" required  />
					</div>
					<div class="form-group">
						<label for="taskTypeColor">Цвет</label>
						<input type="color" class="form-control" id="taskTypeColor" required />
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
				<button type="button" class="btn btn-primary" id="saveTaskTypeButton">Сохранить</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {


			<script>
				document.addEventListener('DOMContentLoaded', function () {
					$('#saveTaskTypeButton').click(function () {
						var id = $('#taskTypeId').val();
						var name = $('#taskTypeName').val().trim();
						var color = $('#taskTypeColor').val();
						console.log('Sending data:', { id: id, name: name, color: color });
						if (!name) {
							alert('Название типа задачи не может быть пустым');
							return;
						}

						var url = id ? "/TaskTypeSettings?handler=UpdateTaskType" : "/TaskTypeSettings?handler=CreateTaskType";

						$.ajax({
							url: url,
							type: 'POST',
							data: JSON.stringify({
								Id: parseInt(id) || 0,
								Name: name,
								Color: color
							}),
							contentType: 'application/json',
							dataType: 'json',
							headers: {
								"RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
							},
							success: function (response) {
								$('#taskTypeModal').modal('hide');
								if (response.success) {
									location.reload(); // Перезагрузка страницы для обновления списка типов задач
								} else {
									alert('Ошибка сохранения типа задачи');
								}
							},
							error: function (xhr, status, error) {
								console.error('Ошибка сохранения типа задачи:', xhr.responseText);
								alert('Ошибка сохранения типа задачи: ' + xhr.responseText);
							}

						});
					});
				});

				function editTaskType(id) {
					$.get("/TaskTypeSettings?handler=TaskType", { id: id }, function (data) {
						$('#taskTypeId').val(data.id);
						$('#taskTypeName').val(data.name);
						$('#taskTypeColor').val(data.color);
						$('#taskTypeModal').modal('show');
					});
				}

				function deleteTaskType(id) {
					if (confirm('Вы уверены, что хотите удалить этот тип задачи?')) {
						$.ajax({
						url: '/TaskTypeSettings?handler=DeleteTaskType',
						type: 'POST',
						data: JSON.stringify({ id: id }),
						contentType: 'application/json',
						headers: {
							"RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
						},
						success: function (response) {
						if (response.success) {
							location.reload();
						} else {
							alert('Ошибка удаления типа задачи: ' + response.error);
						}
						},
						error: function (xhr, status, error) {
						console.error('Ошибка удаления типа задачи:', xhr.responseText);
						alert('Ошибка удаления типа задачи: ' + xhr.responseText);
				}
			});
		}
	}
			</script>
}